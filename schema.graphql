type PoolCreated @entity(immutable: true) {
  id: Bytes!
  token0: Bytes! # address
  token1: Bytes! # address
  index: BigInt! # uint32
  tickLower: Int! # int24
  tickUpper: Int! # int24
  fee: Int! # uint24
  pool: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Swap @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  zeroForOne: Boolean! # bool
  amountIn: BigInt! # uint256
  amountInRemaining: BigInt! # uint256
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Token @entity(immutable: false) {
  id: Bytes! # token address
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
  # 统计字段
  totalVolumeUSD: BigDecimal!
  totalLiquidityUSD: BigDecimal!
  txCount: BigInt!
  # 价格相关
  priceUSD: BigDecimal
  # 时间戳
  createdAt: BigInt!
  updatedAt: BigInt!
}

type TokenDayData @entity(immutable: false) {
  id: ID! # token address + day timestamp
  token: Token!
  date: Int! # day timestamp
  volumeUSD: BigDecimal!
  volumeETH: BigDecimal!
  txCount: BigInt!
  priceUSD: BigDecimal
  liquidityUSD: BigDecimal!
  priceChangeUSD: BigDecimal!
  priceChangePercent: BigDecimal!
}
